FILE (GLOB_RECURSE project_SRCS *.cpp *.cxx *.cc *.C *.c *.h *.hpp)

FILE(GLOB_RECURSE project_HDRS ../include/*.h)

SET (project_LIBS ${Boost_LIBRARIES} ${PCL_LIBRARIES})
SET (project_BIN ${PROJECT_NAME})
SET(STATIC_LIB_NAME ${PROJECT_NAME}-staticlib)
SET(SHARED_LIB_NAME ${PROJECT_NAME}-sharedlib)

IF (NOT DEFINED project_build_shared)
   IF (CMAKE_CROSSCOMPILING)
       SET(project_build_shared 0)
   ELSE (CMAKE_CROSSCOMPILING)
       SET(project_build_shared 1)
   ENDIF (CMAKE_CROSSCOMPILING)
ENDIF (NOT DEFINED project_build_shared)

IF (NOT DEFINED project_build_static)
   SET(project_build_static 1)
ENDIF (NOT DEFINED project_build_static)

IF (WIN32)
	SET (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -D_WIN32_WINNT=0x0501")
	SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -D_WIN32_WINNT=0x0501")
ENDIF(WIN32)

IF (UNIX)
	SET (CMAKE_C_FLAGS "${CMAKE_C_FLAGS} -std=c++11")
	SET (CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
ENDIF(UNIX)

IF (project_build_static)
	ADD_LIBRARY(${STATIC_LIB_NAME} STATIC ${project_SRCS}  ${project_HDRS})
	TARGET_INCLUDE_DIRECTORIES(${STATIC_LIB_NAME} PUBLIC 
		$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
		$<INSTALL_INTERFACE:include>
		PUBLIC src)
	TARGET_LINK_LIBRARIES(${STATIC_LIB_NAME} ${project_LIBS})
	SET_TARGET_PROPERTIES(${STATIC_LIB_NAME} PROPERTIES VERSION "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}" OUTPUT_NAME ${project_BIN} CLEAN_DIRECT_OUTPUT 1)
	INSTALL(TARGETS ${STATIC_LIB_NAME} 
		ARCHIVE DESTINATION lib
		LIBRARY DESTINATION lib
		RUNTIME DESTINATION bin)
	export(TARGETS ${STATIC_LIB_NAME} FILE ${CMAKE_BINARY_DIR}/ReconConfig.cmake)
ENDIF(project_build_static)

IF (project_build_shared)
	ADD_LIBRARY(${SHARED_LIB_NAME} SHARED ${project_SRCS}  ${project_HDRS})
	TARGET_INCLUDE_DIRECTORIES(${SHARED_LIB_NAME} PUBLIC 
		$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR}/include>
		$<INSTALL_INTERFACE:include>
		PUBLIC src)
	TARGET_LINK_LIBRARIES(${SHARED_LIB_NAME} ${project_LIBS})
	SET_TARGET_PROPERTIES(${SHARED_LIB_NAME} PROPERTIES VERSION "${APPLICATION_VERSION_MAJOR}.${APPLICATION_VERSION_MINOR}" OUTPUT_NAME ${project_BIN} CLEAN_DIRECT_OUTPUT 1)
	INSTALL(TARGETS ${SHARED_LIB_NAME}
		ARCHIVE DESTINATION lib
		LIBRARY DESTINATION lib
		RUNTIME DESTINATION bin)
	export(TARGETS ${SHARED_LIB_NAME} FILE ${CMAKE_BINARY_DIR}/ReconConfig.cmake)
ENDIF(project_build_shared)
